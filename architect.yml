name: sjdfhbu9rtujhosr5
description: |
  An Architect Starter Project using React.
homepage: 'https://github.com/architect-templates/react'
keywords:
  - react
  - express
  - javascript
secrets:
  db_user:
    description: Root user to assign to the component's DB
    default: architect
  db_pass:
    description: Root password to assign to the component's DB
    default: secret
  db_name:
    description: Name of the DB the component will store content in
    default: api-db
  db_port:
    description: Port for the db
    default: 5432
  api_port:
    description: Port for api
    default: 8080
services:
  app:
    depends_on:
      - api
    build:
      context: ./
      args:
        NODE_ENV: production
    interfaces:
      main:
        port: 8080
        ingress:
          subdomain: app
    environment:
      PORT: 8080
      REACT_APP_API_ADDR: '${{ services.api.interfaces.http.ingress.url }}'
    command: npm run start
    liveness_probe:
      command: 'curl --fail 0.0.0.0:8080'
      interval: 30s
      failure_threshold: 3
    debug:
      environment:
        WDS_SOCKET_PORT: '${{ services.api.interfaces.http.ingress.port }}'
      liveness_probe:
        initial_delay: 30s
      command: npm run dev
      build:
        args:
          NODE_ENV: development
      volumes:
        src:
          mount_path: /usr/src/app/src
          host_path: ./src
  api-db:
    image: 'postgres:12'
    interfaces:
      database:
        port: '${{ secrets.db_port }}'
        protocol: postgresql
    environment:
      POSTGRES_USER: '${{ secrets.db_user }}'
      POSTGRES_PASSWORD: '${{ secrets.db_pass }}'
      POSTGRES_DB: '${{ secrets.db_name }}'
    liveness_probe:
      command: 'pg_isready -d ${{ secrets.db_name }} -U ${{ secrets.db_user }}'
      interval: 10s
      failure_threshold: 3
  api:
    depends_on:
      - api-db
    image: 'registry.gitlab.com/architect-io/docker-files/sample-backend:latest'
    interfaces:
      http:
        port: '${{ secrets.api_port }}'
        ingress:
          subdomain: api
    environment:
      DB_ADDR: '${{ services.api-db.interfaces.database.url }}/${{ secrets.db_name }}'
      DB_USER: '${{ secrets.db_user }}'
      DB_PASS: '${{ secrets.db_pass }}'
      PORT: '${{ secrets.api_port }}'
